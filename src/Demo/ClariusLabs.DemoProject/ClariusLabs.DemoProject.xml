<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ClariusLabs.DemoProject</name>
    </assembly>
    <members>
        <member name="T:ClariusLabs.Demo.IProvider">
            <summary>
            <b>unknown tag</b>
            </summary>
            <remarks>
            <code>
            </code>
            </remarks>
        </member>
        <member name="T:ClariusLabs.Demo.Provider">
            <summary>
            </summary>
            <remarks>
            Remarks.
              <example>
                  Example with code:<code>
                      var code = new Code();
                      var length = code.Length + 1;
                  </code><para>
                      With a paragraph with <c>inline code</c>.
                  </para>
              </example>
              <list type="table">
                  <listheader>
                      <term>Term</term>
                      <description>Description</description>
                  </listheader>
                  <item>
                      <term>ItemTerm</term>
                      <description>ItemDescription</description>
                  </item>
              </list>
            </remarks>
            <seealso cref="T:ClariusLabs.Demo.Provider"/>
            <exception cref="T:ClariusLabs.Demo.Provider">Exception</exception>
        </member>
        <member name="E:ClariusLabs.Demo.Provider.Connected">
            <summary>
            Occurs when the provider is connected.
            </summary>
        </member>
        <member name="T:ClariusLabs.Demo.ProviderType">
            <summary>
            The type of provider.
            <para>
            With a paragraph
            </para>
            <para>
            Or two.
            </para>
            And then some.
            </summary>
        </member>
        <member name="F:ClariusLabs.Demo.ProviderType.This">
            <summary>
            The provider is of this type.
            </summary>
        </member>
        <member name="F:ClariusLabs.Demo.ProviderType.That">
            <summary>
            The provider is of that type.
            </summary>
        </member>
        <member name="T:ClariusLabs.Demo.Sample">
            <summary>
            Sample API documentation. This is the summary.
            With every line we will have the same 
            issue. This should all go to a single 
            non-breaking line.
            </summary>
            <example>
            What follows is an example:
            <code>
            var code = new ThisIsCode();
            </code>
            And this is an inline <c>c tag</c> within an example.
            </example>
            <remarks>
            This is the remarks section, which can also have <c>c tag</c> code.
            <code>
            var code = new SomeCodeTagWithinRemarks();
            </code>
            You can use <see cref="T:ClariusLabs.Demo.Provider"/> see tag within sections.
            <para>
            We can have paragraphs anywhere.
            </para>
            </remarks>
            <seealso cref="T:ClariusLabs.Demo.Provider"/>
        </member>
        <member name="M:ClariusLabs.Demo.Sample.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ClariusLabs.Demo.Sample"/> class.
            </summary>
        </member>
        <member name="M:ClariusLabs.Demo.Sample.GetValue(System.Int32)">
            <summary>
            Gets the value for the given <paramref name="id"/>.
            </summary>
            <param name="id">The id to get the value for.</param>
            <returns><see langword="true"/> if the value <c>true</c> (with c tag); <see langword="false"/> otherwise.</returns>
        </member>
        <member name="M:ClariusLabs.Demo.Sample.Do``1(System.Func{``0})">
            <summary>
            Generic method on non-generic type.
            </summary>
        </member>
        <member name="P:ClariusLabs.Demo.Sample.Id">
            <summary>
            Gets or sets the id.
            </summary>
            <value>
            The id of this sample.
            </value>
        </member>
        <member name="T:ClariusLabs.Demo.Sample.NestedType">
            <summary>
            A nested type
            </summary>
        </member>
        <member name="P:ClariusLabs.Demo.Sample.NestedType.NestedTypeProperty">
            <summary>
            Gets or sets the nested type property.
            </summary>
        </member>
        <member name="T:ClariusLabs.Demo.Sample.PrivateNestedType">
            <summary>
            This is not added to the type map.
            </summary>
        </member>
        <member name="T:ClariusLabs.Demo.SampleExtensions">
            <summary>
            Extension class for <see cref="T:ClariusLabs.Demo.Sample"/>.
            </summary>
        </member>
        <member name="M:ClariusLabs.Demo.SampleExtensions.Do(ClariusLabs.Demo.Sample)">
            <summary>
            Summary of an extension method for <see cref="T:ClariusLabs.Demo.Sample"/>.
            </summary>
            <param name="sample" this="true">The sample to do on.</param>
        </member>
        <member name="T:ClariusLabs.Demo.SampleGeneric`2">
            <summary>
            Sample with generic type <typeparamref name="T" />.
            </summary>
            <typeparam name="T">The T</typeparam>
            <typeparam name="S"></typeparam>
        </member>
        <member name="M:ClariusLabs.Demo.SampleGeneric`2.Do``1(System.Func{`0,`1,``0})">
            <summary>
            Does the specified <paramref name="func" />.
            </summary>
            <typeparam name="R">R</typeparam>
            <param name="func">The func T.</param>
            <returns>
            Returns
            </returns>
        </member>
        <member name="T:ClariusLabs.Demo.SampleStruct">
            <summary>
            Sample <c>struct</c>.
            </summary>
            <remarks>
            Code:
            <code>
            var code = new Code();
            var new = code.New();
            </code>
            cool!
            </remarks>
          
        </member>
      <member name="P:ClariusLabs.Demo.SampleStruct.Id">
            <summary>
            Gets or sets the id.
            </summary>
            <value>
            The id value.
            </value>
        </member>
      <member name="T:ClariusLabs.Demo.SampleTypeWithCodeWithEmptyLines">
        <example>
          Code with empty lines should not throw:
          <code>
            var code = new Code();

            var new = code.New();
          </code>
        </example>
      </member>
	  <member name="T:ClariusLabs.Demo.SampleTypeWithInvalidRemarksIndentation">
            <remarks>
              The next line contains less empty spaces or tabs (indentation) than this line, which it's the first one
            
            </remarks>
        </member>
    </members>
</doc>
